# bspwm hotkeys {{{
super + {_,shift} + w
    bspc node -{c,k}

super + s
    bspc query -N -n focused.tiled && state=floating || state=tiled; \
    bspc node -t $state

super + f
    bspc query -N -n "focused.fullscreen" && target=\~; \
    bspc node -t $\{target\}fullscreen

# if the current node is automatic, send it to the last manual, otherwise pull the last leaf
super + y
    bspc query -N -n focused.automatic && bspc node -n last.!automatic || bspc node last.leaf -n focused

alt + {_,shift} + Tab
    bspc node -f {next,prev}.local

super + t
    bspc desktop -l next

super + shift + {h,j,k,l}
    move.sh {west,south,north,east}

super + {h,j,k,l}
    focus.sh {west,south,north,east}

super + alt + {h,j,k,l}
    resize.sh {left,bottom,top,right};

super + ctrl + {h,j,k,l}
    bspc node -p {west,south,north,east}

super + ctrl + {_,shift + }space
    bspc node @{_,/} -p cancel

# desktop by index on this monitor
super + {1-9}
    bspc desktop -f "$(bspc query -D -m | sed -n '{1-9} p')";

# send node to desktop on current monitor index
super + shift + {1-9}
    bspc node -d "$(bspc query -D -m | sed -n '{1-9} p')"

# insert receptacle, or clear receptacles on current desktop
super + {_,shift} + r
    {true,false} && bspc node -i || \
    for win in `bspc query -N -d -n .leaf.!window`; do bspc node $win -k ; done;

# balance, retrigger focus even after.
super + equal
    bspc query -N -n focused.window && target=@/; \
    bspc node $target -B; \
    bspc node -f

# hide current node, or restore a queried hidden node
super + {_,shift} + minus
    bspc node { ,$(bspc query -N -d -n .hidden | head -n 1)} -g hidden

# focus the node for the given path jump
super + {p,b,comma,period}
    bspc node -f @{parent,brother,first,second}

# path jumps by DIR (unsure/need better binding)
super + ctrl + alt + {h,j,k,l}
    bspc node -f @{west,south,north,east}

# kill panel, nicely ask all windows to close, quit.
# todo: ask nicely for real.
super + shift + q
    pgrep lemonbar && ~/.wm/scripts/panelt; \
    for win in $(bspc query -N); do bspc node $win -c ; done; \
    bspc quit

# rotate desktops, or groups of nodes, retrigger focus event after.
super + {_,shift} + semicolon
    bspc query -N -n focused.window && target=@/; \
    bspc node $target -R {90,270}; \
    bspc node -f

# toggle panel or gaps.
super + {_,shift} + slash
    ~/.wm/scripts/{gapt,panelt}

# }}}

# wm independent hotkeys {{{

#super + p
#    ~/.wm/scripts/i3blur.sh

super + o
    $BROWSER

super + e
    $FILEBROWSER

super + Return
    $TERMINAL

# launch a program, with a var set for GTK3 programs to launch with the right theme.
super + space
    export GTK_THEME="`cat $HOME/.themes/ACTIVE_THEME 2>/dev/null`"; \
    eval dmenu_run $(dmenu_options)

# A nice wrapper script for password store.
super + shift + space
    eval passmenu $(dmenu_options)

XF86Audio{Prev,Next}
     mpc -q {prev,next}

XF86AudioPlay
     mpc -q toggle

XF86Audio{LowerVolume,RaiseVolume}
    amixer -q sset Master 3%{-,+}

XF86AudioMute
    amixer -q set Master toggle

# make sxhkd reload its configuration files
super + Escape
    pkill -USR1 -x sxhkd

# }}}
