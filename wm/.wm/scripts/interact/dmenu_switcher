#!/usr/bin/env bash
# neeasade
# all switcher dmenu

switch=""
options=""

# windows
wids="$(bspc query -N -n .leaf.\!hidden)"
for wid in $wids; do
  title="window: $(xtitle $wid)"
  options="${options}"$'\n'"${title}"
  switch="$switch '$(echo "${title}" | sed "s#'#\'\\\'\'#g")') bspc node -f $wid;;"
done

# emacs buffers
buffers="$(
elisp '(-remove (lambda (buffer)
           (or
             (s-match "magit" buffer)
             (s-match "\*.*" buffer)
             )
           )
  (mapcar
    (function buffer-name)
    (buffer-list)
    )
  )
' | sed 's/" "/\n/g;s/("//;s/")//'
)"

for buffer in $buffers; do
  option="buffer: $buffer"
  options="${options}"$'\n'"${option}"
  switch="$switch '$(echo "${option}" | sed "s#'#\'\\\'\'#g")') select_action 'window: emacs' && elisp '(counsel-switch-to-buffer-or-window \"${buffer}\")';;"
done

# qutebrowser tabs
# so, after navigation, tabs are stored in history
# we can peek at the current number of open tabs via subprocess count
# and grab the last n history navs
# and send the buffer command with a url match to force navigation
# update: this didn't work because you can't associate back button
# and navigations within a tab, better approach would be to patch qute with autocommands,
# which would allow subscription on tabswitch so you could do this.
# open_urls() {
#   tab_count="$(ps -f -g $(pgrep qutebrowser) 2>/dev/null | tail +5 | wc -l)"
#   sqlite3 "$HOME/.local/share/qutebrowser/history.sqlite" \
# 	  "select * from history order by atime DESC limit ${tab_count}" | \
#       cut -d '|' -f2
#       # sed 's/^/"/g;s/$/"/g'
# }

# # for url in "$(open_urls)"; do
# while read -r url; do
#   option="tab: $url"
#   options="${options}"$'\n'"${option}"
#   switch="$switch '$(echo "${option}" | sed "s#'#\'\\\'\'#g")') qb_command :buffer \"${url}\"';;"
# done <<< "$(open_urls)"

select_action() {
  # allow partial match for emacs switch match call
  # pause to rethink your life
  target="$(echo "$options" | grep "$@")"
  eval "case \"${target}\" in $switch esac"
}

switch="$switch *) ;;"
select_action "$(echo "$options" | dmenu "$@")"
