#!/usr/bin/env dash
# eval things, handle special cases.
# todo: consider handling padding case

# the prefix used to signal upper panel:
prefix=meta

case "$*" in
  invert)
    eval echo ${prefix}${juicedLemon}_background="\$${juicedLemon}_foreground"
    eval echo ${prefix}${juicedLemon}_foreground="\$${juicedLemon}_background"
    ;;
  active)
    eval echo ${prefix}${juicedLemon}_background="\$${juicedLemon}_activebg"
    eval echo ${prefix}${juicedLemon}_foreground="\$${juicedLemon}_activefg"

    result="%{"
    for section in activeunderline activeoverline; do
        if [ $(eval "echo \${${juicedLemon}_${section}}") = true ]; then
            [ "$section" = "activeunderline" ] && postfix="u" || postfix="o"
            result="${result}+${postfix}"
        fi
    done
    result="${result}U$(eval "echo \${${juicedLemon}_activeline}")}"
    echo "${prefix}line[\"${juicedLemon}\"]=\"$result\""
    ;;
  reset)
    eval echo ${prefix}${juicedLemon}_background="\$${juicedLemon}_background"
    eval echo ${prefix}${juicedLemon}_foreground="\$${juicedLemon}_foreground"

    result="%{"
    for section in underline overline; do
        if [ $(eval "echo \${${juicedLemon}_${section}}") = true ]; then
            result="${result}+$(echo $section | cut -c1)"
        fi
    done
    result="${result}U$(eval "echo \${${juicedLemon}_line}")}"
    echo "${prefix}line[\"${juicedLemon}\"]=\"$result\""

    ;;
  start)
    echo ${prefix}start
    ;;
  end)
    echo ${prefix}end
    ;;
  set*)
    # assume "set <content>", eg "set foreground=#ffffff"
    shift
    echo "${prefix}${juicedLemon}_$*"
    ;;
  *)
    echo "${prefix}$*" ;;
esac
