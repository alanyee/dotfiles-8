#!/usr/bin/env dash
# neeasade
# print icon for different symbols in a few different fonts
# targetting: awesome, siji, ionic.
# usage: $0  <icon_type> [<font_type>] (you can define font via iconfont var)

case $1 in
    # awesome, siji, ionic.
    battery)  icon='f017 e1fe';;
    clock)    icon='f017 e015';;
    cloud)    icon='f0c2 e22b';;
    file)     icon='f15c e1ed';;
    folder)   icon='f07c e1d9';;
    lock)     icon='f023 e029';;
    logoff)   icon='f08b e157';;
    mail)     icon='f0e0 e072';;
    music)    icon='f025 e04d';;
    next)     icon='f050 e09c';;
    pause)    icon='f04c e09b';;
    play)     icon='f04b e058';;
    prev)     icon='f049 e096';;
    rotate)   icon='f01e e1c0';;
    shutdown) icon='f011 e00d';;
    sound)    icon='f028 e05d';;
    up)       icon='f062 e060';;
    world)    icon='ff0a e1a0';;
    *) echo "icon type not found."
       exit 1;;
esac

# ick
# todo: handle/define this at a theme level somehow.
[ ! -z "$2" ] && iconfont="$2" || iconfont="$(echo $PANEL_FONT_ICON | tr '[:upper:]' '[:lower:]' | grep -Eo 'awesome|siji|ionic')"

case $iconfont in
    awesome) index=1;;
    siji)    index=2;;
    ionic)   echo "not implemented.";;
    *) echo "icon font not found: $iconfont"
       exit 1;;
esac

env printf "\u$(echo $icon | cut -d ' ' -f$index)"
