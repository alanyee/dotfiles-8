#!/usr/bin/env dash

focusMonitor=$(bspc query -T -m $mon | jq -r .name)
pPadding=3

AC='%{A:'           # start click area
AB=':}'             # end click area cmd
AE='%{A}'           # end click area

# Shell commands for clickable areas
goto='bspc desktop -f'       # go to this desktop
cycle='bspc desktop -l next' # cycle tiled/monocle

# padding gross loop.
padding=
for i in $(seq $pPadding); do
   padding="$padding "
done

block='[ ! -z $NoPadding ] && pPadding=$NoPadding

        padding=""
        for i in $(seq $pPadding); do
            padding="$padding "
        done

        if [ "$blockActive" = true ] ; then
            echo -n "%{B$pBGActiveTab}%{F$pFGActiveTab}${padding}$blockContent${padding}%{B$pBG} ";
        else
            echo -n "%{B$pBGInactiveTab}%{F$pFGInactiveTab}${padding}$blockContent${padding}%{B$pBG} ";
        fi '


echo "$DO" | grep -q '%{-o}' && overline=true || overline=false

while read line; do
        wm_infos=""
        line="$(echo $line | grep -Eo "[Mm]${focusMonitor}[^mM]*")"

	IFS=':'
	set -- ${line#?}
	while [ $# -gt 0 ] ; do
		item=$1
		name=${item#?}
		command=$goto
		blockActive=false
		case $item in
			O*) dColor="$pActive" && dDisplay="$DO" && blockActive=true;; #active occupied desktop
			F*) dColor="$pActive" && dDisplay="$DF" && blockActive=true;; #active free desktop
			U*) dColor="$pUrgent" && dDisplay="$DO";; #active urgent desktop
			o*) dColor="$pRest" && dDisplay="$DO";; #inactive occupied desktop
			f*) dColor="$pRest" && dDisplay="$DF";; #inactive free desktop
			u*) dColor="$pUrgent" && dDisplay="$DO";; #inactive urgent desktop
			L*) if [ ! -z "$NoModeToggle" ]; then
			   dDisplay=
			else
			   dColor="$pRest" && command="$cycle" && name=
			   dDisplay="$( [ "$item" = "LT" ] && echo $DT || echo $DM)"
			fi;; # mode toggle
			*) dDisplay= ;; # Monitor<Paste>
		esac

		if [ ! -z "$dDisplay" ]; then
			[ "$desktopDisplay" = name ] && ! echo "$item" | grep -q "^L" && dDisplay="$name"
			if $showFreeDesktops || ! echo "$item" | grep -q "^f"; then
				if [ "$desktopDisplayType" = separate ]; then
					blockContent="${AC}${command} ${name}${AB}$padding${dDisplay}$padding${AE}"
					NoPadding=0
					wm_infos="$wm_infos$(eval "$block" )"
					NoPadding=
				else
				   wm_infos="$wm_infos%{F$dColor}${AC}${command} ${name}${AB} ${dDisplay} ${AE}"
				fi
			fi
		fi
		shift
	done

	# WHY DOES THIS LINE AFFECT THE SPACING ON THE LEFT WHEN SEPARATED
	if [ "$desktopDisplayType" = "together" ]; then
		NoPadding=$((pPadding - 1))
		blockContent="$wm_infos"
		wm_infos="$(eval "$block")"
		NoPadding=
	fi

	echo "$wm_infos"
done
