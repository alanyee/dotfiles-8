#!/usr/bin/env dash
# takes input from `xtitle -s`, makes titles.
# determines monitor from $mon variable (set outside this script)
# todo: handle multiple title block separation better,
# investigate handling that at lemonade level/define delimiter.
# Neeasade

if [[ "$mon" -ne "$(bspc query -M -m)" ]]; then
   exit
fi

### OPTIONS ###
# Always tabbed visible windows option:
onlyShowActive=${always_tab:-false}
# Maxium window title length
maxWinNameLen=${maxWinNameLen:-25}
# The delimiter to separate window sections
win_delim=${win_delim:-\|}
# The delimiter to separate the window name from the window in a window section.
win_id_delim=${win_id_delim:-//}

# set $1 length to $maxWinNameLen chars (trim or pad)
setLength() {
    content="$(echo "$1" | cut -c 1-$maxWinNameLen)"

    count=$(echo $content | wc -c)
    remain=$(( $maxWinNameLen - $count ))
    [ $(( $remain % 2 )) -ne 0 ] && remain=$(( $remain + 1 ))
    padding=
    for i in $(seq $(( $remain / 2))); do
        padding="$padding "
    done

    echo -n "$padding$content$padding";
}

while read -r window; do
   active=$(bspc query -N -m $mon -n .focused.active)

   if [ "$window" = "$active" ]; then
      # todo: make activeBG not lower in tools/lemonade
      echo meta title_background="${title_activebg}"
      echo meta title_foreground="${title_activefg}"
      echo "$(setLength "$(xtitle $window)")"
      echo meta title_background="${title_background}"
      echo meta title_foreground="${title_foreground}"
   else
      echo "$(setLength "$(xtitle $window)")"
   fi
done
