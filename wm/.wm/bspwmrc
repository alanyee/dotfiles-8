#!/usr/bin/env dash

set -a

# Toggle a default gap setting if it's not already set.
[ -z "$BSPWM_GAPS" ] && BSPWM_GAPS=true

# get settings
. ~/.bspwm_theme

bspc config border_width $b_border_width
bspc config split_ratio  $b_split_ratio

bspc config normal_border_color "$b_normal_border_color"
bspc config active_border_color "$b_active_border_color"
bspc config focused_border_color "$b_focused_border_color"
bspc config presel_feedback_color "$b_presel_feedback_color"

# focus options:
bspc config focus_follows_pointer true
bspc config pointer_follows_monitor false
bspc config pointer_follows_focus false
bspc config focus_by_distance true
bspc config history_aware_focus false

# rules
bspc rule -a gimp floating=on

# set window spacing according to gap settings - if no gaps, overlap window borders.
$BSPWM_GAPS || b_window_gap=-$b_border_width
bspc config window_gap $b_window_gap
bspc config top_padding $((PANEL_HEIGHT + b_border_width `$BSPWM_GAPS && echo + PANEL_GAP`))
for side in right bottom left; do
    bspc config ${side}_padding $((0 `$BSPWM_GAPS || echo + $b_border_width`))
done
bspc config borderless_monocle `$BSPWM_GAPS && echo false || echo true`

# relaunch panel
[ -f /tmp/panel-pid ] && kill -s 15 $(cat /tmp/panel-pid)
~/.wm/panel/panel &

# declare desktops per monitor
for monitor in $(bspc query -M); do
    bspc monitor $monitor -d 00 01 10 11
done

# relaunch pulse so colors are related to current theme
pkill pulse.sh
pulse.sh

# Use a reference file to determine if this is initial run (by checking if the file is older than last boot)
# and if so, run a startup file.
timestamp="$HOME/.wm/timestamp"
uptimeInSeconds=$((`sed 's/.* //;s/\..*//' < /proc/uptime` / 60))
timestampInSeconds=$((`date +%s` - `date -r "$timestamp" +%s`))
[ ! -f "$timestamp" ] || [ $((uptimeInSeconds - timestampInSeconds)) -lt 0 ] && "$HOME/.wm/startup.sh"
touch "$timestamp"
