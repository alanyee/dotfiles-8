#!/usr/bin/env dash
# neeasade's bspwmrc
# heavily tied to my theme-based setup.
# todo: revisit toggling gaps think we're off by a bit on top padding.

set -a

# get settings
. ~/.bspwm_theme
kill -s 15 $(cat /tmp/panel-pid) 2>/dev/null || LAUNCH_PANEL=false
$BSPWM_GAPS || b_window_gap=-$b_border_width

bspc config border_width $b_border_width &
bspc config split_ratio  $b_split_ratio  &

bspc config normal_border_color   "$b_normal_border_color"   &
bspc config active_border_color   "$b_active_border_color"   &
bspc config focused_border_color  "$b_focused_border_color"  &

bspc config presel_feedback_color "$b_presel_feedback_color" &

bspc config focus_follows_pointer true &

# external rules
bspc config external_rules_command `which external_rules.sh` &

# to gap or not to gap
bspc config window_gap $b_window_gap &
bspc config top_padding $((0 `$BSPWM_GAPS || echo + b_border_width` `$LAUNCH_PANEL && echo + PANEL_HEIGHT + PANEL_GAP`)) &
for side in right bottom left; do
    bspc config ${side}_padding $((0 `$BSPWM_GAPS || echo + $b_border_width`)) &
done
bspc config borderless_monocle `$BSPWM_GAPS && echo false || echo true` &

$LAUNCH_PANEL && ~/.wm/panel/panel &

# declare desktops per monitor
for monitor in $(bspc query -M); do
    bspc monitor $monitor -d 00 01 10 11 &
done

pgrep -f pulse.sh >/dev/null 2>&1 && pkill -f pulse.sh
pgrep -f 2bspwm >/dev/null 2>&1 && pkill -f 2bspwm
# If our border width is not at least 5px 2 borders looks eh. If not doing that, let's pulse.
[ $b_border_width -gt 4 ] && (2bspwm &) || (pulse.sh &) &

# use a reference file to determine if this is initial run (by checking if the file is older than last boot)
# and if so, run a startup file.
timestamp="$HOME/.wm/timestamp"
uptimeInSeconds=$((`sed 's/.* //;s/\..*//' < /proc/uptime` / 60))
timestampInSeconds=$((`date +%s` - `date -r "$timestamp" +%s 2>/dev/null || echo 0`))
[ ! -f "$timestamp" ] || [ $((uptimeInSeconds - timestampInSeconds)) -lt 0 ] && "$HOME/.wm/startup.sh" &
touch "$timestamp"
