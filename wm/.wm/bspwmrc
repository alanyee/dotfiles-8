#!/usr/bin/env bash
# neeasade's bspwmrc
# heavily tied to my theme-based setup.

set -a

# get settings
. ~/.bspwm_theme
PATH=$PATH:$HOME/.wm/scripts

LAUNCH_PANEL=true
kill -s TERM $(cat /tmp/panel-pid) 2>/dev/null || LAUNCH_PANEL=false

$BSPWM_GAPS || b_window_gap=-$b_border_width

bspc config border_width $b_border_width &
bspc config split_ratio  $b_split_ratio  &

bspc config normal_border_color   "$b_normal_border_color"   &
bspc config active_border_color   "$b_active_border_color"   &
bspc config focused_border_color  "$b_focused_border_color"  &

bspc config presel_feedback_color "$b_presel_feedback_color" &

bspc config focus_follows_pointer true &
bspc config ignore_ewmh_focus false &
bspc config remove_unplugged_monitors true &
bspc config remove_disabled_monitors true &

# external rules
bspc config external_rules_command `which external_rules.sh` &

# to gap or not to gap
bspc config window_gap $b_window_gap &
bspc config top_padding $((0 `$BSPWM_GAPS || echo + b_border_width ` `$LAUNCH_PANEL && echo + PANEL_HEIGHT + PANEL_GAP`)) &

for side in right bottom left; do
    bspc config ${side}_padding $((0 `$BSPWM_GAPS || echo + $b_border_width`)) &
done

bspc config borderless_monocle `$BSPWM_GAPS && echo false || echo true` &

# declare desktops per monitor
for monitor in $(bspc query -M); do
    bspc monitor $monitor -d 00 01 10 11 &
done

$LAUNCH_PANEL && ~/.wm/panel/lemonade &

pgrep -f pulse.sh >/dev/null 2>&1 && pkill -f pulse.sh
pgrep -f 2bspwm >/dev/null 2>&1 && pkill -f 2bspwm

# If our border width is not at least 5px 2 borders looks eh. If not doing that, let's pulse.
# [ $b_border_width -gt 4 ] && (nohup 2bspwm &) || (nohup pulse.sh &) &

# check if just starting
if [ $(( `date +%s` - xstart )) -lt 2 ]; then
    $HOME/.wm/startup.sh &
    $HOME/.wm/panel/lemonade &
fi
